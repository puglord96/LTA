{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/*!\n * node-minify\n * Copyright(c) 2011-2023 Rodolphe Stoclin\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\nimport CleanCSS from 'clean-css';\nimport { utils } from '@node-minify/utils';\nimport { MinifierOptions } from '@node-minify/types';\n\n// type OptionsPossibleCleanCSS = string | boolean | Record<string, string> | { url: string };\n\n// type OptionsCleanCSS = {\n//   // _sourceMap: boolean | { url: string };\n//   // sourceMap: boolean | { url: string };\n//   [Key: string]: OptionsPossibleCleanCSS | Record<string, OptionsPossibleCleanCSS>;\n// };\n\n// type SettingsCleanCSS = {\n//   options: OptionsCleanCSS;\n// };\n\n// type MinifierOptionsCleanCSS = {\n//   settings: SettingsCleanCSS;\n// };\n\n/**\n * Run clean-css.\n *\n * @param {Object} settings\n * @param {String} content\n * @param {Function} callback\n * @param {Number} index\n */\nconst minifyCleanCSS = ({ settings, content, callback, index }: MinifierOptions) => {\n  if (settings?.options?.sourceMap) {\n    settings.options._sourceMap = settings.options.sourceMap;\n    settings.options.sourceMap = true;\n  }\n  const _cleanCSS = new CleanCSS(settings && { returnPromise: false, ...settings.options }).minify(content ?? '');\n  const contentMinified = _cleanCSS.styles;\n  if (_cleanCSS.sourceMap && typeof settings?.options?._sourceMap === 'object') {\n    utils.writeFile({\n      file: typeof settings.options._sourceMap.url === 'string' ? settings.options._sourceMap.url : '',\n      content: _cleanCSS.sourceMap.toString(),\n      index\n    });\n  }\n  if (settings && !settings.content && settings.output) {\n    settings.output && utils.writeFile({ file: settings.output, content: contentMinified, index });\n  }\n  if (callback) {\n    return callback(null, contentMinified);\n  }\n  return contentMinified;\n};\n\n/**\n * Expose `minifyCleanCSS()`.\n */\nminifyCleanCSS.default = minifyCleanCSS;\nexport = minifyCleanCSS;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AASA,uBAAqB;AACrB,mBAAsB;AA2BtB,IAAM,iBAAiB,CAAC,EAAE,UAAU,SAAS,UAAU,MAAM,MAAuB;AAClF,MAAI,UAAU,SAAS,WAAW;AAChC,aAAS,QAAQ,aAAa,SAAS,QAAQ;AAC/C,aAAS,QAAQ,YAAY;AAAA,EAC/B;AACA,QAAM,YAAY,IAAI,iBAAAA,QAAS,YAAY,EAAE,eAAe,OAAO,GAAG,SAAS,QAAQ,CAAC,EAAE,OAAO,WAAW,EAAE;AAC9G,QAAM,kBAAkB,UAAU;AAClC,MAAI,UAAU,aAAa,OAAO,UAAU,SAAS,eAAe,UAAU;AAC5E,uBAAM,UAAU;AAAA,MACd,MAAM,OAAO,SAAS,QAAQ,WAAW,QAAQ,WAAW,SAAS,QAAQ,WAAW,MAAM;AAAA,MAC9F,SAAS,UAAU,UAAU,SAAS;AAAA,MACtC;AAAA,IACF,CAAC;AAAA,EACH;AACA,MAAI,YAAY,CAAC,SAAS,WAAW,SAAS,QAAQ;AACpD,aAAS,UAAU,mBAAM,UAAU,EAAE,MAAM,SAAS,QAAQ,SAAS,iBAAiB,MAAM,CAAC;AAAA,EAC/F;AACA,MAAI,UAAU;AACZ,WAAO,SAAS,MAAM,eAAe;AAAA,EACvC;AACA,SAAO;AACT;AAKA,eAAe,UAAU;AACzB,iBAAS;","names":["CleanCSS"]}